#ifndef _TG_CTF_H
#define _TG_CTF_H

/*
 * The following C code was generated by barectf 2.2.0
 * on 2016-07-13T19:52:02.094086.
 *
 * For more details, see <https://github.com/efficios/barectf>.
 */

#include <stdint.h>

#include "tg_ctf-bitfield.h"




#define tg_ctf_trace_instr tg_ctf_default_trace_instr
#define tg_ctf_trace_mem tg_ctf_default_trace_mem

struct tg_ctf_ctx;

uint32_t tg_ctf_packet_size(void *ctx);
int tg_ctf_packet_is_full(void *ctx);
int tg_ctf_packet_is_empty(void *ctx);
uint32_t tg_ctf_packet_events_discarded(void *ctx);
uint8_t *tg_ctf_packet_buf(void *ctx);
void tg_ctf_packet_set_buf(void *ctx, uint8_t *buf, uint32_t buf_size);
uint32_t tg_ctf_packet_buf_size(void *ctx);
int tg_ctf_packet_is_open(void *ctx);

/* barectf platform callbacks */
struct tg_ctf_platform_callbacks {
	/* clock callbacks */
	uint64_t (*default_clock_get_value)(void *);

	/* is back-end full? */
	int (*is_backend_full)(void *);

	/* open packet */
	void (*open_packet)(void *);

	/* close packet */
	void (*close_packet)(void *);
};

/* common barectf context */
struct tg_ctf_ctx {
	/* platform callbacks */
	struct tg_ctf_platform_callbacks cbs;

	/* platform data (passed to callbacks) */
	void *data;

	/* output buffer (will contain a CTF binary packet) */
	uint8_t *buf;

	/* packet size in bits */
	uint32_t packet_size;

	/* content size in bits */
	uint32_t content_size;

	/* current position from beginning of packet in bits */
	uint32_t at;

	/* packet header + context size (content offset) */
	uint32_t off_content;

	/* events discarded */
	uint32_t events_discarded;

	/* current packet is opened */
	int packet_is_open;
};

/* context for stream "default" */
struct tg_ctf_default_ctx {
	/* parent */
	struct tg_ctf_ctx parent;

	/* config-specific members follow */
	uint32_t off_tph_magic;
	uint32_t off_tph_uuid;
	uint32_t off_tph_stream_id;
	uint32_t off_spc_timestamp_begin;
	uint32_t off_spc_timestamp_end;
	uint32_t off_spc_packet_size;
	uint32_t off_spc_content_size;
	uint32_t off_spc_events_discarded;
};

/* initialize context */
void tg_ctf_init(
	void *ctx,
	uint8_t *buf,
	uint32_t buf_size,
	struct tg_ctf_platform_callbacks cbs,
	void *data
);

/* open packet for stream "default" */
void tg_ctf_default_open_packet(
	struct tg_ctf_default_ctx *ctx
);

/* close packet for stream "default" */
void tg_ctf_default_close_packet(struct tg_ctf_default_ctx *ctx);

/* trace (stream "default", event "instr") */
void tg_ctf_default_trace_instr(
	struct tg_ctf_default_ctx *ctx,
	uint64_t ep_pc
);

/* trace (stream "default", event "mem") */
void tg_ctf_default_trace_mem(
	struct tg_ctf_default_ctx *ctx,
	uint8_t ep_op,
	uint64_t ep_addr,
	uint64_t ep_size
);

#endif /* _TG_CTF_H */